class Solution {
public:
    vector<int> prefixmin(vector<int>& nums) {
        int n = nums.size();
        vector<int> pmin(n);
        pmin[0] = nums[0];
        for(int i=1; i<n; i++) {
            pmin[i] = min(nums[i], pmin[i-1]);
        }
        return pmin;
    }
    vector<int> suffixmax(vector<int>& nums) {
        int n = nums.size();
        vector<int> smax(n);
        smax[n-1] = nums[n-1];
        for(int i=n-2; i>=0; i--) {
            smax[i] = max(nums[i], smax[i+1]);
        }
        return smax;
    }
    int maxProfit(vector<int>& prices) {
        int n = prices.size(), ans = INT_MIN;
        vector<int> buys = prefixmin(prices);
        vector<int> sells = suffixmax(prices);

        for(int i=0; i<n-1; i++) {
            int temp = sells[i+1] - buys[i];
            ans = max(ans, temp);
        }
        if(ans < 0) {
            return 0;
        }
        return ans;
    }
};
